# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master
    - develop

environment:
  standard_version: '2.3.1'
  
# blacklist
#  except:
#    - gh-pages

# Do not build on tags (GitHub and BitBucket)
#skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
#skip_non_tags: true

# Skipping commits with particular message or from specific user
#skip_commits:
#  message: /Created.*\.(png|jpg|jpeg|bmp|gif)/      # Regex for matching commit message
#  author: John                                      # Commit author's username, name, email or regexp maching one of these.

# Including commits with particular message or from specific user
#only_commits:
#  message: /build/                # Start a new build if message contains 'build'
#  author: jack@company.com        # Start a new build for commit of user with email jack@company.com

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#skip_commits:
#  files:
#    - docs/*
#    - '**/*.html'

# Including commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#only_commits:
#  files:
#    - Project-A/
#    - Project-B/

# Do not build feature branch with open Pull Requests
#skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2017

# scripts that are called at very beginning, before repo cloning
#init:
#  - nuget restore

# clone directory
clone_folder: c:\projects\BullOak

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

# set clone depth
clone_depth: 1                      # clone entire repository history if not defined

# setting up etc\hosts file
hosts:
  queue-server: 127.0.0.1
  db.server.com: 127.0.0.2

# environment variables

#  my_var2: value2
  # this is how to set encrypted variable. Go to "Encrypt data" page in account menu to encrypt data.
#  my_secure_var1:
#    secure: FW3tJ3fMncxvs58/ifSP7w==

# environment:
#  global:
#    connection_string: server=12;password=13;
#    service_url: https://127.0.0.1:8090
#
#  matrix:
#  - db: mysql
#    provider: mysql
#
#  - db: mssql
#    provider: mssql
#    password:
#      secure: $#(JFDA)jQ@#$

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  allow_failures:
    - platform: x86
      configuration: Release
    - platform: x64
      configuration: Release

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - libs
  - '%LocalAppData%\NuGet\Cache'

# enable service required for build/tests
#services:
#  - mssql2017          # start SQL Server 2017 Developer Edition
#  - mongodb             # start MongoDB

pull_requests:
  do_not_increment_build_number: true

# scripts that run after cloning repository
install:
  # by default, all script lines are interpreted as batch
  # - echo This is batch
  # to run script as a PowerShell command prepend it with ps:
  # - ps: Write-Host 'This is PowerShell'
  # batch commands start from cmd:
  # - cmd: echo This is batch again
  # - cmd: set MY_VAR=12345

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "1.0.{build}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '$(standard_version)'
  assembly_version: '$(standard_version).$(appveyor_build_number)'
  file_version: '$(standard_version).$(appveyor_build_number)'


# Automatically register private account and/or project AppVeyor NuGet feeds.
nuget:
  account_feed: true
  project_feed: true
  disable_publish_on_pr: true
                                  # account/project feeds for pull request builds

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: src\BullOak.sln      # path to Visual Studio solution or project
  #publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
  #publish_wap_xcopy: true         # package Web Application Projects (WAP) for XCopy deployment
  #publish_azure: true             # package Azure Cloud Service projects and push to artifacts
  publish_nuget: true             # package projects with .nuspec files and push to artifacts
  #publish_nuget_symbols: true     # generate and publish NuGet symbol packages
  #include_nuget_references: true  # add -IncludeReferencedProjects option while packaging NuGet artifacts

  # MSBuild verbosity level
  verbosity: normal


# scripts to run before build
before_build:
  - nuget restore ./src/BullOak.sln

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:
#  - nuget install FAKE -OutputDirectory .\packages -Version 4.63.13 -Verbosity quiet
#  - cmd: .\packages\FAKE.4.64.13\tools\FAKE.exe build.fsx Default Configuration=Release

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test:
  assemblies:
    - '**\*.Test.Unit.dll'
    - '**\*.Test.Acceptance.dll'

#  categories:

# to run tests from different categories as separate jobs in parallel
#test:
#  categories:
#    - A            # A category common for all jobs
#    - [UI]         # 1st job
#    - [DAL, BL]    # 2nd job

# scripts to run before tests
before_test:

# scripts to run after tests
after_test:

# to run your custom scripts instead of automatic tests
test_script:

# to disable automatic tests
#test: off


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing a single file
  #- path: test.zip

  # pushing a single file with environment variable in path and "Deployment name" specified
  #- path: MyProject\bin\$(configuration)
  #  name: myapp

  # pushing entire folder as a zip archive
  # - path: logs

  # pushing all *.nupkg files in build directory recursively
  # - path: '**\*.nupkg'
  
  - path: '*.nupkg'
    name: bullOakNugets
  

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

    # FTP deployment provider settings
#  - provider: FTP
#    protocol: ftp|ftps|sftp
#    host: ftp.myserver.com
#    username: admin
#    password:
#      secure: eYKZKFkkEvFYWX6NfjZIVw==
#    folder:
#    application:
#    active_mode: false
#    beta: true      # enable alternative FTP library for 'ftp' and 'ftps' modes
#    debug: true     # show complete FTP log
#
#    # Amazon S3 deployment provider settings
#  - provider: S3
#    access_key_id:
#      secure: ABcd==
#    secret_access_key:
#      secure: ABcd==
#    bucket: my_bucket
#    folder:
#    artifact:
#    set_public: false
#
#    # Azure Blob storage deployment provider settings
#  - provider: AzureBlob
#    storage_account_name:
#      secure: ABcd==
#    storage_access_key:
#      secure: ABcd==
#    container: my_container
#    folder:
#    artifact:
#
#    # Web Deploy deployment provider settings
#  - provider: WebDeploy
#    server: http://www.deploy.com/myendpoint
#    website: mywebsite
#    username: user
#    password:
#      secure: eYKZKFkkEvFYWX6NfjZIVw==
#    ntlm: false
#    remove_files: false
#    app_offline: false
#    do_not_use_checksum: true           # do not use check sum for comparing source and destination files. By default checksums are used.
#    sync_retry_attempts: 2              # sync attempts, max
#    sync_retry_interval: 2000           # timeout between sync attempts, milliseconds
#    aspnet_core: true                   # artifact zip contains ASP.NET Core application
#    aspnet_core_force_restart: true     # poke app's web.config before deploy to force application restart
#    skip_dirs: \\App_Data
#    skip_files: web.config
#    on:
#      branch: release
#      platform: x86
#      configuration: debug
#
#    # Deploying to Azure Cloud Service
#  - provider: AzureCS
#    subscription_id:
#      secure: fjZIVw==
#    subscription_certificate:
#      secure: eYKZKFkkEv...FYWX6NfjZIVw==
#    storage_account_name: my_storage
#    storage_access_key:
#      secure: ABcd==
#    service: my_service
#    slot: Production
#    target_profile: Cloud
#    artifact: MyPackage.cspkg
#
    # Deploying to NuGet feed
  - provider: NuGet
    api_key:
      secure: +tceHEN4n1HCeAOyBGT3/7PJMmGGv9LPcLN38Q0hNJpJS6C+h3PyCt8wxSwe/LwZ
    skip_symbols: false 
    artifact: /.*\.nupkg/ 

#    # Deploy to GitHub Releases
#  - provider: GitHub
#    artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
#    draft: false
#    prerelease: false
#    on:
#      branch: master                # release from master branch only
#      appveyor_repo_tag: true       # deploy on tag push only
#
#    # Deploying to a named environment
#  - provider: Environment
#    name: staging
#    on:
#      branch: staging
#      env_var1: value1
#      env_var2: value2
#
# scripts to run before deployment
before_deploy:

# scripts to run after deployment
after_deploy:
  - ps: |
        Write-Output "APPVEYOR_BUILD_VERSION = $APPVEYOR_BUILD_VERSION"
        Write-Output "env.APPVEYOR_BUILD_VERSION = $env:APPVEYOR_BUILD_VERSION"
        Write-Output "APPVEYOR_BUILD_NUMBER = $APPVEYOR_BUILD_NUMBER"
        Write-Output "env.APPVEYOR_BUILD_NUMBER = $env:APPVEYOR_BUILD_NUMBER"
        Write-Output "APPVEYOR_PULL_REQUEST_NUMBER = $APPVEYOR_PULL_REQUEST_NUMBER"
        Write-Output "env.APPVEYOR_PULL_REQUEST_NUMBER = $env:APPVEYOR_PULL_REQUEST_NUMBER"
        
        $postParams = @{ value1 = "BullOak.Repositories"; value2 = "$env:standard_version"; value3="https://www.nuget.org/packages/BullOak.Repositories/"  }
        Invoke-WebRequest -Uri https://maker.ifttt.com/trigger/bo_release/with/key/kSg0JPLZLcht1NDoihgjW -Method POST -Body $postParams

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
 
# on build failure
on_failure:
 
# after build failure or success
on_finish:
 

#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:
  - provider: Slack
    incoming_webhook: https://hooks.slack.com/services/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
